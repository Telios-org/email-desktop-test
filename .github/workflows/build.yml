name: Build/release

on: push

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: registry.gitlab.com
  DOCKER_IMAGE: telios2/telios-devops/ansible/prd:latest

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

#      - name: Yarn install and build
#        shell: bash
#        run: |
#          yarn install
#          yarn build

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: false

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release/

  publish:
    container:
      image: registry.gitlab.com/telios2/telios-devops/ansible/prd:latest
      credentials:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    needs: build
    env:
      platform: ${{ matrix.os }}

    strategy:
      matrix:   
        os: [macos-latest, ubuntu-latest, windows-latest]
      
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release/

#      - name: Log into registry ${{ env.REGISTRY }}
#        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ secrets.REGISTRY_USERNAME }}
#          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: ansible publish
        shell: bash
        run: |
          ls -la
          ansible-playbook playbooks/site.yml --tags none


      #docker pull ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE }}
      #docker run -v ${PWD}:${PWD} -w ${PWD} --entrypoint ansible-playbook ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE }} playbooks/site.yml --tags none