name: Build/release

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
#TODO Don't use the matrix build so that succsful builds can be published without waiting, instead make two additional files for common code of the jobs and make 6 separate jobs
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: set version
        shell: bash
        run: |
          if [ "${{ github.ref }}" == "refs/heads/beta" ]
          then
            CHANNEL="-beta"
          fi
          echo "sed -i "s/\(.version.:..[0-9]*.[0-9]*.\)[0-9]*/\1${{ github.run_number }}${CHANNEL}/g" package.json"
          sed -i "s/\(.version.:..[0-9]*.[0-9]*.\)[0-9]*/\1${{ github.run_number }}${CHANNEL}/g" package.json
          sed -i "s/\(.version.:..[0-9]*.[0-9]*.\)[0-9]*/\1${{ github.run_number }}${CHANNEL}/g" app/package.json
          cat package.json | grep "version.:"

#      - name: Yarn install and build
#        shell: bash
#       run: |
#         yarn install

#TODO will periodically fail to build, try to cache the node_modules / binaries to avoid recompiles
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          release: false

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release/

  publish:
    if: github.ref == 'refs/heads/master' ||  github.ref == 'refs/heads/beta'
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/telios2/telios-devops/ansible/prd:latest
      credentials:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    needs: build
    env:
      platform: ${{ matrix.os }}

    strategy:
      matrix:   
        os: [macos-latest, ubuntu-latest, windows-latest]
      
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
        
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release/

      - name: ansible publish
        shell: bash
        run: |
          ls -la release/
          ansible-playbook playbooks/site.yml --tags none
